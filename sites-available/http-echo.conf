server {
    listen 80;
    server_name http.example.com;

    location / {
        echo 'XXX Status Code Description';
    }

    location /1xx { echo '1xx Informational'; }
    location =/100 { echo '100 Continue';   return 100; }
    location =/101 { echo '101 Switching Protocols';    return 101; }
    location =/102 { echo '102 Processing (WebDAV; RFC 2518)';  return 102; }

    location /2xx { echo '2xx Success'; }
    location =/200 { echo '200 OK'; return 200; }
    location =/201 { echo '201 Created';    return 201; }
    location =/202 { echo '202 Accepted';   return 202; }
    location =/203 { echo '203 Non-Authoritative Information (since HTTP/1.1)'; return 203; }
    location =/204 { echo '204 No Content'; return 204; }
    location =/205 { echo '205 Reset Content';  return 205; }
    location =/206 { echo '206 Partial Content (RFC 7233)'; return 206; }
    location =/207 { echo '207 Multi-Status (WebDAV; RFC 4918)';    return 207; }
    location =/208 { echo '208 Already Reported (WebDAV; RFC 5842)';    return 208; }
    location =/226 { echo '226 IM Used (RFC 3229)'; return 226; }

    location /3xx { echo '3xx Redirection'; }
    location =/300 { echo '300 Multiple Choices';   return 300; }
    location =/301 { echo '301 Moved Permanently';  return 301; }
    location =/302 { echo '302 Found';  return 302; }
    location =/303 { echo '303 See Other (since HTTP/1.1)'; return 303; }
    location =/304 { echo '304 Not Modified (RFC 7232)';    return 304; }
    location =/305 { echo '305 Use Proxy (since HTTP/1.1)'; return 305; }
    location =/306 { echo '306 Switch Proxy';   return 306; }
    location =/307 { echo '307 Temporary Redirect (since HTTP/1.1)';    return 307; }
    location =/308 { echo '308 Permanent Redirect (RFC 7538)';  echo '308 Resume Incomplete (Google)';  return 308; }

    location /4xx { echo '4xx Client Error'; }
    location =/400 { echo '400 Bad Request';    return 400; }
    location =/401 { echo '401 Unauthorized (RFC 7235)';    return 401; }
    location =/402 { echo '402 Payment Required';   return 402; }
    location =/403 { echo '403 Forbidden';  return 403; }
    location =/404 { echo '404 Not Found';  return 404; }
    location =/405 { echo '405 Method Not Allowed'; return 405; }
    location =/406 { echo '406 Not Acceptable'; return 406; }
    location =/407 { echo '407 Proxy Authentication Required (RFC 7235)';   return 407; }
    location =/408 { echo '408 Request Timeout';    return 408; }
    location =/409 { echo '409 Conflict';   return 409; }
    location =/410 { echo '410 Gone';   return 410; }
    location =/411 { echo '411 Length Required';    return 411; }
    location =/412 { echo '412 Precondition Failed (RFC 7232)'; return 412; }
    location =/413 { echo '413 Payload Too Large (RFC 7231)';   return 413; }
    location =/414 { echo '414 Request-URI Too Long';   return 414; }
    location =/415 { echo '415 Unsupported Media Type'; return 415; }
    location =/416 { echo '416 Requested Range Not Satisfiable (RFC 7233)'; return 416; }
    location =/417 { echo '417 Expectation Failed'; return 417; }
    location =/418 { echo '418 I\'m a teapot (RFC 2324)';   return 418; }
    location =/419 { echo '419 Authentication Timeout (not in RFC 2616)';   return 419; }
    location =/420 { echo '420 Method Failure (Spring Framework)';  echo '420 Enhance Your Calm (Twitter)'; return 420; }
    location =/421 { echo '421 Misdirected Request (HTTP/2)';   return 421; }
    location =/422 { echo '422 Unprocessable Entity (WebDAV; RFC 4918)';    return 422; }
    location =/423 { echo '423 Locked (WebDAV; RFC 4918)';  return 423; }
    location =/424 { echo '424 Failed Dependency (WebDAV; RFC 4918)';   return 424; }
    location =/426 { echo '426 Upgrade Required';   return 426; }
    location =/428 { echo '428 Precondition Required (RFC 6585)';   return 428; }
    location =/429 { echo '429 Too Many Requests (RFC 6585)';   return 429; }
    location =/431 { echo '431 Request Header Fields Too Large (RFC 6585)'; return 431; }
    location =/440 { echo '440 Login Timeout (Microsoft)';  return 440; }
    location =/444 { echo '444 No Response (Nginx)';    return 444; }
    location =/449 { echo '449 Retry With (Microsoft)'; return 449; }
    location =/450 { echo '450 Blocked by Windows Parental Controls (Microsoft)';   return 450; }
    location =/451 { echo '451 Unavailable For Legal Reasons (Internet draft)'; echo '451 Redirect (Microsoft)';    return 451; }
    location =/494 { echo '494 Request Header Too Large (Nginx)';   return 494; }
    location =/495 { echo '495 Cert Error (Nginx)'; return 495; }
    location =/496 { echo '496 No Cert (Nginx)';    return 496; }
    location =/497 { echo '497 HTTP to HTTPS (Nginx)';  return 497; }
    location =/498 { echo '498 Token expired/invalid (Esri)';   return 498; }
    location =/499 { echo '499 Client Closed Request (Nginx)';  echo '499 Token required (Esri)';   return 499; }

    location /5xx { echo '5xx Server Error'; }
    location =/500 { echo '500 Internal Server Error';  return 500; }
    location =/501 { echo '501 Not Implemented';    return 501; }
    location =/502 { echo '502 Bad Gateway';    return 502; }
    location =/503 { echo '503 Service Unavailable';    return 503; }
    location =/504 { echo '504 Gateway Timeout';    return 504; }
    location =/505 { echo '505 HTTP Version Not Supported'; return 505; }
    location =/506 { echo '506 Variant Also Negotiates (RFC 2295)'; return 506; }
    location =/507 { echo '507 Insufficient Storage (WebDAV; RFC 4918)';    return 507; }
    location =/508 { echo '508 Loop Detected (WebDAV; RFC 5842)';   return 508; }
    location =/509 { echo '509 Bandwidth Limit Exceeded (Apache bw/limited extension)'; return 509; }
    location =/510 { echo '510 Not Extended (RFC 2774)';    return 510; }
    location =/511 { echo '511 Network Authentication Required (RFC 6585)'; return 511; }
    location =/520 { echo '520 Unknown Error';  return 520; }
    location =/522 { echo '522 Origin Connection Time-out'; return 522; }
    location =/598 { echo '598 Network read timeout error (Unknown)';   return 598; }
    location =/599 { echo '599 Network connect timeout error (Unknown)';    return 599; }

    location ~/([0-9][0-9][0-9]) {
        echo '$1 Unknown Status Code';
    }
}

